name: Release

on:
  workflow_dispatch:
    inputs:
      majorVersion:
        required: true
        default: '0'
      minorVersion:
        required: true
        default: '2'

jobs:
  publish:
    if: github.ref == 'refs/heads/master'
    runs-on: macos-latest
    env:
      releaseVersion: ${{ github.event.inputs.majorVersion }}.${{ github.event.inputs.minorVersion }}.${{ github.run_number }}
    steps:
      - name: Version
        run: echo Releasing version $releaseVersion
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 8.0.x
      # Publish osx-x64
      - name: Publish osx-x64
        run: (cd CosmosExplorer.Avalonia; dotnet publish -r osx-x64 -p:Configuration=Release -p:DebugType=None -p:DebugSymbols=false -p:Version=${{env.releaseVersion}}  -p:PublishSingleFile=true -p:PublishTrimmed=true -p:EnableCompressionInSingleFile=true)
      - name: Zip osx-x64         
        run: (cd CosmosExplorer.Avalonia/bin/Release/net8.0/osx-x64/publish ; zip -r LiteCosmosExplorer_osx-x64.zip *)
        
        
      # Publish osx-arm64
      - name: Publish osx-arm64
        run: (cd CosmosExplorer.Avalonia;dotnet publish -r osx-arm64 -p:Configuration=Release -p:DebugType=None -p:DebugSymbols=false -p:Version=${{env.releaseVersion}} -p:PublishSingleFile=true -p:PublishTrimmed=true -p:EnableCompressionInSingleFile=true)
      #- name: Publish osx-arm64
        #run: (cd CosmosExplorer.Avalonia/bin/Release/net8.0/osx-arm64/publish ; zip -r LiteCosmosExplorer_osx-arm64.zip *)     
        #run: dotnet publish -c Release -r osx-x64 CosmosExplorer.Avalonia/CosmosExplorer.Avalonia.csproj
     
     # Publish win-x64
      - name: Publish win-x64
        run: (cd CosmosExplorer.Avalonia;dotnet publish -r win-x64 -p:Configuration=Release -p:DebugType=None -p:DebugSymbols=false -p:Version=${{env.releaseVersion}} -p:PublishSingleFile=true -p:PublishTrimmed=true -p:EnableCompressionInSingleFile=true)
      - name: Zip win-x64
        run: (cd CosmosExplorer.Avalonia/bin/Release/net8.0/win-x64/publish ; zip -r LiteCosmosExplorer_win-x64 *)
      
      # Publish linux-x64
      - name: Publish linux-x64
        run: (cd CosmosExplorer.Avalonia;dotnet publish -r linux-x64 -p:Configuration=Release -p:DebugType=None -p:DebugSymbols=false -p:Version=${{env.releaseVersion}} -p:PublishSingleFile=true -p:PublishTrimmed=true -p:EnableCompressionInSingleFile=true)
      - name: Zip linux-x64
        run: (cd CosmosExplorer.Avalonia/bin/Release/net8.0/linux-x64/publish ; zip -r LiteCosmosExplorer_linux-x64 *)

      - name: Create DMG directory structure
        run: |
             mkdir -p dmg/LiteCosmosExplorer
             cp -R CosmosExplorer.Avalonia/bin/Release/net8.0/osx-arm64/publish/* dmg/LiteCosmosExplorer/
    
      - name: Install CreateDMG tool
        run: brew install create-dmg
        
      - name: Create DMG
        run: create-dmg dmg/LiteCosmosExplorer.dmg --overwrite

   
        
      # Create release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.releaseVersion }}
          release_name: ${{ env.releaseVersion }}
          draft: false
          prerelease: false

      - name: Upload DMG
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /Users/runner/work/CosmosExplorer/CosmosExplorer/dmg/LiteCosmosExplorer.dmg
          asset_name: CosmosExplorer.dmg
          asset_content_type: application/zip

      # Upload osx-x64
      - name: Upload osx-x64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: CosmosExplorer.Avalonia/bin/Release/net8.0/osx-x64/publish/LiteCosmosExplorer_osx-x64.zip
          asset_name: LiteCosmosExplorer_osx-x64.zip
          asset_content_type: application/zip
          
      # Upload osx-arm64
      #- name: Upload osx-arm64
      #  uses: actions/upload-release-asset@v1
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #  with:
      #    upload_url: ${{ steps.create_release.outputs.upload_url }}
      #    asset_path: CosmosExplorer.Avalonia/bin/Release/net8.0/osx-arm64/publish/LiteCosmosExplorer_osx-arm64.zip
      #    asset_name: LiteCosmosExplorer_osx-arm64.zip
      #    asset_content_type: application/zip
      # Upload win-x64
      - name: Upload win-x64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: CosmosExplorer.Avalonia/bin/Release/net8.0/win-x64/publish/LiteCosmosExplorer_win-x64.zip
          asset_name: LiteCosmosExplorer_win-x64.zip
          asset_content_type: application/zip
      # Upload linux-x64
      - name: Upload linux-x64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: CosmosExplorer.Avalonia/bin/Release/net8.0/linux-x64/publish/LiteCosmosExplorer_linux-x64.zip
          asset_name: LiteCosmosExplorer_linux-x64.zip
          asset_content_type: application/zip
