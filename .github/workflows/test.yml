name: Test

env:
  BuildDir: ./bld
  ScriptDir: ./scripts
  Product: LiteCosmosExplorer
  Prerelease: false
  SolutionFile: ./CosmosExplorer.sln
  
defaults:
  run:
    shell: pwsh
on:
  workflow_dispatch:
    inputs:
      majorVersion:
        required: true
        default: '0'
      minorVersion:
        required: true
        default: '2'

jobs:

  ci_build_and_test:
    name: CI Build and Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        configuration: [Debug, Release]
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Build Solution
      run: dotnet build -v d --configuration ${{ matrix.configuration }} ${{ env.SolutionFile }}
   
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          tag_name: ${{ env.releaseVersion }}
          release_name: ${{ env.releaseVersion }}
          draft: false
          prerelease: false

  
  
  pub_build_macos:
    name: Publish MacOS Build
    runs-on: macOS-latest
    needs: ci_build_and_test
    strategy:
      matrix:
        target: [MacOSX64, MacOSArm64]
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Build ${{ matrix.target }}
      run: ${{ env.ScriptDir }}/Build${{ matrix.target }}.ps1

    - name: Upload ${{ matrix.target }} Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.pub_create_github_release.outputs.upload_url }}
        asset_path: ${{ env.BuildDir }}/${{ env.Product }}.${{ matrix.target }}.tar.gz
        asset_name: ${{ env.Product }}.${{ matrix.target }}.tar.gz
        asset_content_type: application/gzip

          
    
