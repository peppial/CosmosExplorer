name: Test

env:
  BuildDir: ./bld
  ScriptDir: ./scripts
  Product: LiteCosmosExplorer
  Prerelease: false
  SolutionFile: ./CosmosExplorer.sln
  
defaults:
  run:
    shell: pwsh
on:
  workflow_dispatch:
    inputs:
      majorVersion:
        required: true
        default: '0'
      minorVersion:
        required: true
        default: '2'

jobs:

  pub_create_github_release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ env.Product }} ${{ env.releaseVersion }}
          draft: false
       
  
  pub_build_macos:
    name: Publish MacOS Build
    runs-on: macOS-latest
    needs: pub_create_github_release
    strategy:
      matrix:
        target: [MacOSX64, MacOSArm64]
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Build ${{ matrix.target }}
      run: ${{ env.ScriptDir }}/Build${{ matrix.target }}.ps1

    - name: Upload ${{ matrix.target }} Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.pub_create_github_release.outputs.upload_url }}
        asset_path: ${{ env.BuildDir }}/${{ env.Product }}.${{ matrix.target }}.tar.gz
        asset_name: ${{ env.Product }}.${{ matrix.target }}.tar.gz
        asset_content_type: application/gzip

          
    
